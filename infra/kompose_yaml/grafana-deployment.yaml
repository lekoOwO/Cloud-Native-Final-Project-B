apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: ./kompose convert -f docker-compose.yml --out kompose_yaml/
    kompose.version: 1.26.1 (a9d05d509)
  creationTimestamp: null
  labels:
    io.kompose.service: grafana
  name: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: grafana
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: ./kompose convert -f docker-compose.yml --out kompose_yaml/
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: grafana
    spec:
      containers:
        - env:
            - name: GF_PATHS_DATA
              value: /var/lib/grafana
            - name: INFLUX_TOKEN
              value: _ouSHzto7lXILtP7bE_N9reJfV9FuxONJWgex3pN6TOf3S2sGI2tqRvLqfQkJ3EmBNCRvlEZJj0PQH3DPgBXwA==
          image: howhow8765/cnfpb-grafana
          name: grafana
          ports:
            - containerPort: 3000
          resources: {}
          # volumeMounts:
          #   - mountPath: /var/lib/grafana
          #     name: grafana-claim0
          #   - mountPath: /etc/grafana/provisioning
          #     name: grafana-claim1
      restartPolicy: Always
      # volumes:
      #   - name: grafana-claim0
      #     persistentVolumeClaim:
      #       claimName: grafana-claim0
      #   - name: grafana-claim1
      #     persistentVolumeClaim:
      #       claimName: grafana-claim1
status: {}
